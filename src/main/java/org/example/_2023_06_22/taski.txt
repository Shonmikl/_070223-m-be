- У вас есть Map<String, Boolean>, представляющая студентов и их оценки
(true - сдал экзамен, false - не сдал).
Напишите функцию, которая находит и возвращает имена студентов, не сдавших экзамен.

- У вас есть Map<String, Boolean>, представляющая список продуктов в магазине и
информацию о их наличии (true - продукт в наличии, false - продукта нет).
Напишите функцию, которая подсчитывает количество продуктов, которых нет в наличии.

- У вас есть список List<String>, содержащий имена людей.
Напишите программу, которая выводит все имена, начинающиеся на определенную букву.
List<String> names = Arrays.asList("Alice", "Bob", "Charlie", "David", "Eve", "Frank");
char targetLetter = 'C';

- У вас есть список List<String>, содержащий слова.
Напишите программу, которая находит все пары слов, в которых первое слово является обратным написанию второго слова.
List<String> words = Arrays.asList("lemon", "cat", "tac", "dog", "god", "man", "nam");

-Напишите программу, которая находит сумму всех элементов в заданном массиве arr и выводит ее значение.
-Напишите программу, которая находит среднее арифметическое значение элементов в заданном массиве arr и выводит его.

***********************************************************************************************************************

-Напишите программу, которая принимает на вход двумерный
массив int[][] и возвращает сумму всех элементов в массиве.

-Напишите программу, которая принимает на вход двумерный массив
int[][] и возвращает максимальное значение среди всех элементов в массиве.

-Напишите программу, которая принимает массив строк String[] и
возвращает новый массив, содержащий только уникальные строки из исходного массива

-Напишите программу, которая принимает массив строк String[]
и возвращает новый массив строк, в котором все строки перевернуты задом наперёд.

-Напишите функцию, которая принимает на вход Set<String>
и возвращает новый Set<String>, содержащий только те строки, которые начинаются с заглавной буквы.

-Напишите функцию, которая принимает на вход два Set<String> и
возвращает новый Set<String>, содержащий только те строки, которые присутствуют в обоих наборах.

- Напишите функцию, которая принимает на вход Set<String> и возвращает
новый Set<String>, содержащий только уникальные строки, игнорируя регистр символов
Set<String> stringSet = new HashSet<>();
        stringSet.add("Apple");
        stringSet.add("banana");
        stringSet.add("apple");
        stringSet.add("Banana");

***********************************************************************************************************************
Создайте папку classStructure1
Создайте классы

- Company
    - name
    - Set<Employee>
    - Set<Department>

- Employee
    - name
    - Department(энам)
    - Position(энам)
    - double salary

- Info
    - Map<Position, List<String>>
    - checker() - на вход сотруника, на выходе String в зависимости от позишн
    - avgSalaryDep() - на вход Set<Employee>, Department, на выход средняя зп по департаменту
    - maxSalary() - на вход Set<Employee>, Department, на выход max зп по департаменту + у кого такая зп(имя)
    - minSalary() - на вход Set<Employee>, Department, на выход min зп по департаменту + у кого такая зп(имя)
    - getPromotion() - на вход сотрудника. в методе - засетить переход на одну позицию выше и зп на 25% больше.