Описание:

Вам необходимо создать программу, состоящую из трех классов - Sender, Receiver и MainApp

Класс Sender (Отправитель):
Этот класс представляет отправителя данных.

Создайте переменную dataToSend с типом int для хранения данных, которые будут отправлены.
Создайте метод sendData(int data), который принимает данные в качестве аргумента и сохраняет
их в переменную dataToSend.
Создайте метод getDataToSend(), который возвращает текущие данные для отправки.

Класс Receiver (Получатель):
Этот класс представляет получателя данных.

Создайте переменную receivedData с типом int для хранения принятых данных.
Создайте метод receiveData(int data), который принимает данные в качестве аргумента
сохраняет их в переменную receivedData.
Создайте метод getReceivedData(), который возвращает текущие принятые данные.

Класс MainApp (Главное приложение):
Этот класс будет создавать потоки и организовывать взаимодействие между ними.

В методе main создайте экземпляры классов Sender и Receiver.

Создайте три потока:
Первый поток (senderThread), который будет вызывать методы sendData и receiveData
для отправки данных от отправителя к получателю.
Второй поток (receiverThread), аналогично первому, отправляющий данные от
отправителя к получателю.
Третий поток (mainThread), который будет вызывать метод getReceivedData
получателя и выводить принятые данные в главный поток.
Запустите все три потока.
Требования:

Используйте ключевое слово volatile для обеспечения видимости данных между потоками.
Используйте блоки synchronized для синхронизации выполнения методов в классах.
Потоки должны быть корректно организованы и синхронизированы,
чтобы данные правильно передавались от отправителя к получателю и обратно.
Вывод данных должен быть четким и понятным, чтобы можно было отслеживать взаимодействие потоков.